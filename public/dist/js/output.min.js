function sendData(a){a.cards.forEach(function(a){delete a.$$hashKey}),webSocket.send(JSON.stringify(a)),ui.masonry.reloadItems(),ui.masonry.layout()}var app=angular.module("cardApp",[]).controller("cardController",["$scope",function(a){a.newCard={},a.parsedJSON={},a.showCards=!0,a.sorting={},a.sorting.predicate="title",a.sorting.reverse=!1,a.addCard=function(){var b=!1;if(a.newCard.title=a.newCard.title.trim(),a.newCard.desc=a.newCard.desc.trim(),a.parsedJSON.cards.forEach(function(c){a.newCard.title.toLowerCase()===c.title.toLowerCase()&&(b=!0)}),b)alert("Already exists. This card will not be added.");else{var c=[];if("undefined"!=typeof a.newCard.tags&&""!==a.newCard.tags){var d=a.newCard.tags.split(",");d.forEach(function(a){c.push(a.trim().toLowerCase())})}var e={title:a.newCard.title,desc:a.newCard.desc,tags:c};a.parsedJSON.cards.push(e),sendData(a.parsedJSON),$("#add-card-modal").modal("hide"),a.newCard.title="",a.newCard.desc="",a.newCard.tags=""}},a.removeCard=function(b){var c=a.parsedJSON.cards.indexOf(b);a.parsedJSON.cards.splice(c,1),sendData(a.parsedJSON)},a.validateForm=function(){return!("undefined"==typeof a.newCard.title||""===a.newCard.title||"undefined"==typeof a.newCard.desc||""===a.newCard.desc)},a.reverseSorting=function(){a.showCards=!1,a.$apply(),a.sorting.reverse=!a.sorting.reverse,a.showCards=!0,a.$apply()}}]).directive("card",function(){return{restrict:"E",scope:{details:"=",removeCard:"="},templateUrl:"html/card.html"}}),webSocket,host=location.origin.replace(/^http/,"ws");$(window).load(function(a){ui.updateConnectedUI(),webSocket=webSocketHandler.createWebSocket()}),$(window).on("beforeunload",function(){webSocket.close()});var ui={masonry:{},updateConnectedUI:function(){$("#add-card-button").removeAttr("disabled"),$(".remove-card").removeAttr("disabled"),$("#connection-text").html("Connected"),$("#connection-image").show(),$("#disconnection-image").hide()},updateDisconnectedUI:function(){$("#add-card-button").attr("disabled","disabled"),$(".remove-card").attr("disabled","disabled"),$("#connection-text").html("Disconnected"),$("#connection-image").hide(),$("#disconnection-image").show()}},webSocketHandler={createWebSocket:function(){console.log("Attempting to connect...");var a=new WebSocket(host);return this.timeoutId=null,a.onopen=function(a){console.log("Connected"),clearTimeout(this.timeoutId),ui.updateConnectedUI()},a.onmessage=function(a){var b=JSON.parse(a.data);angular.element("[data-ng-controller=cardController]").scope().parsedJSON=b,angular.element("[data-ng-controller=cardController]").scope().$apply();var c=document.querySelector("#masonry-container");ui.masonry=new Masonry(c,{itemSelector:".masonry-element"}),ui.masonry.reloadItems(),ui.masonry.layout()},a.onclose=function(a){ui.updateDisconnectedUI(),this.timeoutId=setInterval(function(){createWebSocket()},1e4)},a}};