function sendData(a){a.cards.forEach(function(a){delete a.$$hashKey}),ws.send(JSON.stringify(a)),masonry.reloadItems(),masonry.layout()}function cardController(a){a.parsedJSON={},a.addCard=function(){var b=a.tags.split(","),c={title:a.title,desc:a.description,tags:b};a.parsedJSON.cards.push(c),angular.element("[data-ng-controller=cardController").scope().$apply(),sendData(a.parsedJSON)},a.removeCard=function(b){var c=a.parsedJSON.cards.indexOf(b);a.parsedJSON.cards.splice(c,1),angular.element("[data-ng-controller=cardController").scope().$apply(),sendData(a.parsedJSON)}}function createWebSocket(){console.log("Attempting to connect..."),ws=new WebSocket(host),this.timeoutId=null,ws.onopen=function(){console.log("Connected"),clearTimeout(this.timeoutId),$("#add-card-button").removeAttr("disabled"),$(".remove-card").removeAttr("disabled"),$("#connection-text").html("Connected"),$("#connection-image").show(),$("#disconnection-image").hide()},ws.onmessage=function(a){var b=JSON.parse(a.data);angular.element("[data-ng-controller=cardController]").scope().parsedJSON=b,angular.element("[data-ng-controller=cardController]").scope().$apply();var c=document.querySelector("#masonry-container");masonry=new Masonry(c,{itemSelector:".masonry-element"}),masonry.reloadItems(),masonry.layout()},ws.onclose=function(){$("#add-card-button").attr("disabled","disabled"),$(".remove-card").attr("disabled","disabled"),$("#connection-text").html("Disconnected"),$("#connection-image").hide(),$("#disconnection-image").show(),this.timeoutId=setTimeout(function(){createWebSocket()},1e4)}}var app=angular.module("cardApp",[]).controller("cardController",["$scope","$http",cardController]),ws,host=location.origin.replace(/^http/,"ws"),masonry;$(window).load(function(){$("#disconnection-image").hide(),createWebSocket()}),$(window).on("beforeunload",function(){ws.close()});